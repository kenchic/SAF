///////////////////////////////////////////////////////////
//  clsFachadaClaseBase.cs
//  Implementation of the Class clsFachadaClaseBase
//  Generated by Enterprise Architect
//  Created on:      05-abr-2013 12:08:31 p.m.
//  Original author: kenchic
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using BaseDatos;


namespace Seguridad.DALC {
	public class clsFachadaClaseBase {

        #region Miembros
		private clsEventoAuditoriaDALC m_clsEventoAuditoriaDALC;
		private clsPrivilegioDALC m_clsPrivilegioDALC;
		private clsPrivilegioRolDALC m_clsPrivilegioRolDALC;
		private clsRolDALC m_clsRolDALC;
		private clsUsuarioDALC m_clsUsuarioDALC;
        private Comandos m_EjecutorBaseDatos ;
        #endregion

        #region Constructores
        public clsFachadaClaseBase(ref Comandos ejecutor)
        {
            m_EjecutorBaseDatos = ejecutor;
        }

		~clsFachadaClaseBase(){

		}

		public virtual void Dispose(){

		}
        #endregion

        #region Usuario
        /// 
        /// <param name="Id"></param>
        public Seguridad.clsUsuario ConsultarUsuario(int Id)
        {

            return null;
        }

        public List<clsUsuario> ConsultarUsuarios()
        {

            return null;
        }

        public clsUsuario ConsultarUsuariosAutenticacion(string usuario, string clave)
        {
            m_clsUsuarioDALC = new clsUsuarioDALC(m_EjecutorBaseDatos);
            m_clsUsuarioDALC.NombreProcedimiento = "SP_USUARIOS";
            var fabrica = new clsFabricaUsuario();
            var parametros = new Dictionary<string, string>();
            parametros.Add("Usuario",usuario);
            parametros.Add("Clave",clave);
            parametros.Add("Opcion", "5");
            var usuarios = m_clsUsuarioDALC.ConsultarPorParametros(parametros, fabrica);
            if (usuarios.Count > 0)
                return usuarios[0];
            return null;
        }

        /// 
        /// <param name="obj"></param>
        public int EditarUsuario(clsUsuario obj)
        {

            return 0;
        }

        /// 
        /// <param name="obj"></param>
        public int EliminarUsuario(clsUsuario obj)
        {

            return 0;
        }

        /// 
        /// <param name="obj"></param>
        public int InsertarUsuario(clsUsuario obj)
        {

            return 0;
        }
        #endregion

		/// 
		/// <param name="Id"></param>
		public Seguridad.clsEventoAuditoria ConsultarEventoAuditoria(int Id){

			return null;
		}

		public List<clsEventoAuditoria> ConsultarEventosAuditorias(){

			return null;
		}

        /// 
		/// <param name="Id"></param>
		public Seguridad.clsPrivilegio ConsultarPrivilegio(int Id){

			return null;
		}

		/// 
		/// <param name="Id"></param>
		public Seguridad.clsPrivilegioRol ConsultarPrivilegioRol(int Id){

			return null;
		}

		public List<clsPrivilegio> ConsultarPrivilegios(){

			return null;
		}

		public List<clsPrivilegioRol> ConsultarPrivilegiosRoles(){

			return null;
		}

        #region Roles
        /// 
		/// <param name="id"></param>
		public clsRol ConsultarRol(int id){

			return null;
		}
        public List<clsRol> ConsultarRoles(int activo = -1)
        {
            var listFuente = new List<clsRol>();
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "SP_ROLES";
            var fabrica = new clsFabricaClaseBase<clsRol>();
            if ((activo > -1))
            {
                var parametros = new Dictionary<string, string>();
                parametros.Add("p_activo", activo.ToString());
                listFuente = m_clsRolDALC.ConsultarPorParametros(parametros, fabrica);
            }
            else
                listFuente = m_clsRolDALC.ConsultarTodos(fabrica);
            return listFuente;
		}
        /// 
        /// <param name="obj"></param>
        public int InsertarRol(clsRol obj)
        {
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "sp_ROLES";
            return m_clsRolDALC.Insertar(obj);
        }
        /// 
        /// <param name="obj"></param>
        public int EditarRol(clsRol obj)
        {
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "sp_ROLES";
            return m_clsRolDALC.Editar(obj);
        }
        /// 
        /// <param name="obj"></param>
        public int EliminarRol(clsRol obj)
        {
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "sp_ROLES";
            return m_clsRolDALC.Eliminar(obj);
        }
       
        /// 
        /// <param name="obj"></param>
        public int EliminarRoles(string Ids)
        {
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "sp_ROLES";
            return m_clsRolDALC.EliminarVarios(Ids);
        }
        #endregion

        /// 
		/// <param name="obj"></param>
		public int EditarEventoAuditoria(clsEventoAuditoria obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int EditarPrivilegio(clsPrivilegio obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int EditarPrivilegioRol(clsPrivilegioRol obj){

			return 0;
		}

		

		

		/// 
		/// <param name="obj"></param>
		public int EliminarEventoAuditoria(clsEventoAuditoria obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int EliminarPrivilegio(clsPrivilegio obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int EliminarPrivilegioRol(clsPrivilegioRol obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int InsertarEventoAuditoria(clsEventoAuditoria obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int InsertarPrivilegio(clsPrivilegio obj){

			return 0;
		}

		/// 
		/// <param name="obj"></param>
		public int InsertarPrivilegioRol(clsPrivilegioRol obj){

			return 0;
        }

        #region Privilegios Roles
        /// 
        /// <param name="obj"></param>
        public bool TienePermiso(string Permiso, string Valor)
        {
           
            m_clsRolDALC = new clsRolDALC(m_EjecutorBaseDatos, null);
            m_clsRolDALC.NombreProcedimiento = "SP_PRIVILEGIOS_ROLES";
            return m_clsRolDALC.TienePermiso(Permiso, Valor);
        }
        #endregion

    }//end clsFachadaClaseBase

}//end namespace DALC